{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string",
      "defaultValue": "fbwordle",
      "metadata": {
        "description": "Base name for all resources"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "test",
        "prod"
      ],
      "metadata": {
        "description": "Environment name (dev, test, prod)"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "runtimeStack": {
      "type": "string",
      "defaultValue": "node",
      "allowedValues": [
        "node",
        "dotnet",
        "java",
        "python"
      ],
      "metadata": {
        "description": "Function App runtime stack"
      }
    },
    "runtimeVersion": {
      "type": "string",
      "defaultValue": "~4",
      "metadata": {
        "description": "Function App runtime version"
      }
    },
    "cosmosDbConnectionString": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Cosmos DB connection string"
      }
    },
    "staticWebAppUrl": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "URL of the Static Web App"
      }
    },
    "allowedOrigins": {
      "type": "array",
      "defaultValue": [
        "http://localhost:3000",
        "http://localhost:5173"
      ],
      "metadata": {
        "description": "Array of allowed origins for CORS"
      }
    }
  },
  "variables": {
    "resourceSuffix": "[concat('-', parameters('environment'), '-', uniqueString(resourceGroup().id))]",
    "functionAppName": "[concat(parameters('appName'), '-func', variables('resourceSuffix'))]",
    "appServicePlanName": "[concat(parameters('appName'), '-plan', variables('resourceSuffix'))]",
    "storageAccountName": "[concat(replace(parameters('appName'), '-', ''), 'stor', substring(uniqueString(resourceGroup().id), 0, 6))]",
    "appInsightsName": "[concat(parameters('appName'), '-insights', variables('resourceSuffix'))]",
    "cosmosDbDatabaseName": "wordleDb",
    "cosmosDbStatsContainerName": "gameStats",
    "cosmosDbWordsContainerName": "foodWords"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-06-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot",
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "IngestionMode": "ApplicationInsights",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp",
      "properties": {
        "perSiteScaling": false,
        "elasticScaleEnabled": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-06-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-06-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "[parameters('runtimeVersion')]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2020-02-02').InstrumentationKey]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "[parameters('runtimeStack')]"
            },
            {
              "name": "COSMOS_DB_CONNECTION_STRING",
              "value": "[parameters('cosmosDbConnectionString')]"
            },
            {
              "name": "COSMOS_DB_DATABASE_NAME",
              "value": "[variables('cosmosDbDatabaseName')]"
            },
            {
              "name": "COSMOS_DB_STATS_CONTAINER",
              "value": "[variables('cosmosDbStatsContainerName')]"
            },
            {
              "name": "COSMOS_DB_WORDS_CONTAINER",
              "value": "[variables('cosmosDbWordsContainerName')]"
            },
            {
              "name": "STATIC_WEB_APP_URL",
              "value": "[parameters('staticWebAppUrl')]"
            },
            {
              "name": "ENVIRONMENT",
              "value": "[parameters('environment')]"
            }
          ],
          "cors": {
            "allowedOrigins": "[parameters('allowedOrigins')]"
          },
          "ftpsState": "Disabled",
          "minTlsVersion": "1.2"
        },
        "httpsOnly": true
      },
      "resources": [
        {
          "type": "config",
          "apiVersion": "2021-02-01",
          "name": "web",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
          ],
          "properties": {
            "numberOfWorkers": 1,
            "netFrameworkVersion": "v6.0",
            "nodeVersion": "~16",
            "alwaysOn": false,
            "http20Enabled": true,
            "functionAppScaleLimit": 200,
            "minimumElasticInstanceCount": 0
          }
        }
      ]
    }
  ],
  "outputs": {
    "functionAppName": {
      "type": "string",
      "value": "[variables('functionAppName')]"
    },
    "functionAppHostName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName'))).defaultHostname]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    },
    "appInsightsName": {
      "type": "string",
      "value": "[variables('appInsightsName')]"
    },
    "appInsightsKey": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2020-02-02').InstrumentationKey]"
    },
    "appServicePlanName": {
      "type": "string",
      "value": "[variables('appServicePlanName')]"
    }
  }
}
