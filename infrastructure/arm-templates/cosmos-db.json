{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string",
      "defaultValue": "fbwordle",
      "metadata": {
        "description": "Base name for all resources"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "test",
        "prod"
      ],
      "metadata": {
        "description": "Environment name (dev, test, prod)"
      }
    },
    "databaseName": {
      "type": "string",
      "defaultValue": "wordleDb",
      "metadata": {
        "description": "Cosmos DB database name"
      }
    },
    "cosmosDbMaxThroughput": {
      "type": "int",
      "defaultValue": 400,
      "maxValue": 1000,
      "minValue": 400,
      "metadata": {
        "description": "Maximum throughput for the Cosmos DB database (must be between 400-1000 RU/s for free tier)"
      }
    },
    "enableFreeTier": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable free tier pricing option"
      }
    },
    "enableServerless": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable serverless configuration (alternative to free tier provisioned throughput)"
      }
    },
    "defaultConsistencyLevel": {
      "type": "string",
      "defaultValue": "Session",
      "allowedValues": [
        "Eventual",
        "ConsistentPrefix",
        "Session",
        "BoundedStaleness",
        "Strong"
      ],
      "metadata": {
        "description": "The default consistency level of the Cosmos DB account"
      }
    },
    "statsContainerName": {
      "type": "string",
      "defaultValue": "gameStats",
      "metadata": {
        "description": "Container name for game statistics"
      }
    },
    "wordsContainerName": {
      "type": "string",
      "defaultValue": "foodWords",
      "metadata": {
        "description": "Container name for food and beverage words"
      }
    }
  },
  "variables": {
    "resourceSuffix": "[concat('-', parameters('environment'), '-', uniqueString(resourceGroup().id))]",
    "cosmosDbAccountName": "[toLower(concat(parameters('appName'), '-cosmos', variables('resourceSuffix')))]",
    "locations": [
      {
        "locationName": "[parameters('location')]",
        "failoverPriority": 0,
        "isZoneRedundant": false
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2021-04-15",
      "name": "[variables('cosmosDbAccountName')]",
      "location": "[parameters('location')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "consistencyPolicy": {
          "defaultConsistencyLevel": "[parameters('defaultConsistencyLevel')]",
          "maxIntervalInSeconds": 5,
          "maxStalenessPrefix": 100
        },
        "locations": "[variables('locations')]",
        "databaseAccountOfferType": "Standard",
        "enableFreeTier": "[parameters('enableFreeTier')]",
        "enableAutomaticFailover": false,
        "enableMultipleWriteLocations": false,
        "enableServerless": "[parameters('enableServerless')]",
        "publicNetworkAccess": "Enabled",
        "capabilities": [],
        "disableKeyBasedMetadataWriteAccess": false,
        "isVirtualNetworkFilterEnabled": false
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2021-04-15",
      "name": "[concat(variables('cosmosDbAccountName'), '/', parameters('databaseName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))]"
      ],
      "properties": {
        "resource": {
          "id": "[parameters('databaseName')]"
        },
        "options": {
          "throughput": "[if(parameters('enableServerless'), json('null'), parameters('cosmosDbMaxThroughput'))]"
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2021-04-15",
      "name": "[concat(variables('cosmosDbAccountName'), '/', parameters('databaseName'), '/', parameters('statsContainerName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosDbAccountName'), parameters('databaseName'))]"
      ],
      "properties": {
        "resource": {
          "id": "[parameters('statsContainerName')]",
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          },
          "partitionKey": {
            "paths": [
              "/sessionId"
            ],
            "kind": "Hash"
          },
          "defaultTtl": 2592000
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2021-04-15",
      "name": "[concat(variables('cosmosDbAccountName'), '/', parameters('databaseName'), '/', parameters('wordsContainerName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosDbAccountName'), parameters('databaseName'))]"
      ],
      "properties": {
        "resource": {
          "id": "[parameters('wordsContainerName')]",
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          },
          "partitionKey": {
            "paths": [
              "/category"
            ],
            "kind": "Hash"
          }
        }
      }
    }
  ],
  "outputs": {
    "cosmosDbAccountName": {
      "type": "string",
      "value": "[variables('cosmosDbAccountName')]"
    },
    "cosmosDbEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))).documentEndpoint]"
    },
    "cosmosDbConnectionString": {
      "type": "string",
      "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName')), '2021-04-15').connectionStrings[0].connectionString]"
    },
    "cosmosDbPrimaryKey": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName')), '2021-04-15').primaryMasterKey]"
    },
    "databaseName": {
      "type": "string",
      "value": "[parameters('databaseName')]"
    },
    "statsContainerName": {
      "type": "string",
      "value": "[parameters('statsContainerName')]"
    },
    "wordsContainerName": {
      "type": "string",
      "value": "[parameters('wordsContainerName')]"
    }
  }
}
