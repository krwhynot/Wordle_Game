{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string",
      "defaultValue": "fbwordle",
      "metadata": {
        "description": "Base name for all resources"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "test",
        "prod"
      ],
      "metadata": {
        "description": "Environment name (dev, test, prod)"
      }
    },
    "customDomainName": {
      "type": "string",
      "defaultValue": "wordle.kjrcloud.com",
      "metadata": {
        "description": "Custom domain name for the Static Web App"
      }
    },
    "repository": {
      "type": "string",
      "defaultValue": "https://github.com/yourusername/azure-fb-wordle",
      "metadata": {
        "description": "GitHub repository URL"
      }
    },
    "branch": {
      "type": "string",
      "defaultValue": "main",
      "metadata": {
        "description": "GitHub repository branch"
      }
    },
    "cosmosDbMaxThroughput": {
      "type": "int",
      "defaultValue": 400,
      "minValue": 400,
      "maxValue": 1000,
      "metadata": {
        "description": "Maximum throughput for the Cosmos DB (RU/s) - Free tier limit is 400-1000 RU/s"
      }
    }
  },
  "variables": {
    "resourceSuffix": "[concat('-', parameters('environment'), '-', uniqueString(resourceGroup().id))]",
    "functionAppName": "[concat(parameters('appName'), '-func', variables('resourceSuffix'))]",
    "appServicePlanName": "[concat(parameters('appName'), '-plan', variables('resourceSuffix'))]",
    "staticWebAppName": "[concat(parameters('appName'), '-swa', variables('resourceSuffix'))]",
    "cosmosDbAccountName": "[concat(parameters('appName'), '-cosmos', variables('resourceSuffix'))]",
    "appInsightsName": "[concat(parameters('appName'), '-insights', variables('resourceSuffix'))]",
    "storageAccountName": "[concat(replace(parameters('appName'), '-', ''), 'stor', substring(uniqueString(resourceGroup().id), 0, 6))]",
    "cosmosDbDatabaseName": "wordleDb",
    "cosmosDbStatsContainerName": "gameStats",
    "cosmosDbWordsContainerName": "foodWords"
  },
  "resources": [
    {
      "type": "Microsoft.Web/staticSites",
      "apiVersion": "2021-02-01",
      "name": "[variables('staticWebAppName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Free",
        "tier": "Free"
      },
      "properties": {
        "repositoryUrl": "[parameters('repository')]",
        "branch": "[parameters('branch')]",
        "stagingEnvironmentPolicy": "Enabled",
        "allowConfigFileUpdates": true,
        "provider": "GitHub",
        "buildProperties": {
          "appLocation": "client",
          "apiLocation": "api",
          "appArtifactLocation": "build"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-06-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot",
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "IngestionMode": "ApplicationInsights",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp",
      "properties": {
        "perSiteScaling": false,
        "elasticScaleEnabled": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-06-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-06-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2020-02-02').InstrumentationKey]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "node"
            },
            {
              "name": "COSMOS_DB_CONNECTION_STRING",
              "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName')), '2021-06-15').connectionStrings[0].connectionString]"
            },
            {
              "name": "COSMOS_DB_DATABASE_NAME",
              "value": "[variables('cosmosDbDatabaseName')]"
            },
            {
              "name": "COSMOS_DB_STATS_CONTAINER",
              "value": "[variables('cosmosDbStatsContainerName')]"
            },
            {
              "name": "COSMOS_DB_WORDS_CONTAINER",
              "value": "[variables('cosmosDbWordsContainerName')]"
            },
            {
              "name": "STATIC_WEB_APP_URL",
              "value": "[reference(resourceId('Microsoft.Web/staticSites', variables('staticWebAppName'))).defaultHostname]"
            },
            {
              "name": "ENVIRONMENT",
              "value": "[parameters('environment')]"
            }
          ],
          "cors": {
            "allowedOrigins": [
              "[concat('https://', reference(resourceId('Microsoft.Web/staticSites', variables('staticWebAppName'))).defaultHostname)]",
              "[concat('https://', parameters('customDomainName'))]",
              "http://localhost:3000",
              "http://localhost:5173"
            ]
          },
          "ftpsState": "Disabled",
          "minTlsVersion": "1.2"
        },
        "httpsOnly": true
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2021-06-15",
      "name": "[variables('cosmosDbAccountName')]",
      "location": "[parameters('location')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        },
        "locations": [
          {
            "locationName": "[parameters('location')]",
            "failoverPriority": 0,
            "isZoneRedundant": false
          }
        ],
        "databaseAccountOfferType": "Standard",
        "enableAutomaticFailover": false,
        "enableFreeTier": true,
        "enableMultipleWriteLocations": false,
        "capabilities": [
          {
            "name": "EnableServerless"
          }
        ],
        "backupPolicy": {
          "type": "Periodic",
          "periodicModeProperties": {
            "backupIntervalInMinutes": 240,
            "backupRetentionIntervalInHours": 8
          }
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2021-06-15",
      "name": "[concat(variables('cosmosDbAccountName'), '/', variables('cosmosDbDatabaseName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))]"
      ],
      "properties": {
        "resource": {
          "id": "[variables('cosmosDbDatabaseName')]"
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2021-06-15",
      "name": "[concat(variables('cosmosDbAccountName'), '/', variables('cosmosDbDatabaseName'), '/', variables('cosmosDbStatsContainerName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosDbAccountName'), variables('cosmosDbDatabaseName'))]"
      ],
      "properties": {
        "resource": {
          "id": "[variables('cosmosDbStatsContainerName')]",
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ]
          },
          "partitionKey": {
            "paths": [
              "/playerName"
            ],
            "kind": "Hash"
          }
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2021-06-15",
      "name": "[concat(variables('cosmosDbAccountName'), '/', variables('cosmosDbDatabaseName'), '/', variables('cosmosDbWordsContainerName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosDbAccountName'), variables('cosmosDbDatabaseName'))]"
      ],
      "properties": {
        "resource": {
          "id": "[variables('cosmosDbWordsContainerName')]",
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ]
          },
          "partitionKey": {
            "paths": [
              "/category"
            ],
            "kind": "Hash"
          }
        }
      }
    }
  ],
  "outputs": {
    "staticWebAppHostName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/staticSites', variables('staticWebAppName'))).defaultHostname]"
    },
    "functionAppHostName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName'))).defaultHostname]"
    },
    "cosmosDbEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))).documentEndpoint]"
    },
    "staticWebAppName": {
      "type": "string",
      "value": "[variables('staticWebAppName')]"
    },
    "functionAppName": {
      "type": "string",
      "value": "[variables('functionAppName')]"
    }
  }
}
