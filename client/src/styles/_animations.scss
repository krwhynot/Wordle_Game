// Animation variables are defined in _variables.scss
@use 'variables' as *;

// Keyframes for commonly used animations
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes slideInUp {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideInDown {
  from {
    transform: translateY(-20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideInLeft {
  from {
    transform: translateX(-20px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideInRight {
  from {
    transform: translateX(20px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-10px);
  }
  60% {
    transform: translateY(-5px);
  }
}

@keyframes shake {
  0%, 100% {
    transform: translateX(0);
  }
  10%, 30%, 50%, 70%, 90% {
    transform: translateX(-5px);
  }
  20%, 40%, 60%, 80% {
    transform: translateX(5px);
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

// Special animation for Wordle tile flips
@keyframes flip {
  0% {
    transform: rotateX(0);
  }
  50% {
    transform: rotateX(90deg);
  }
  100% {
    transform: rotateX(0);
  }
}

// Animation mixins for easy application
@mixin animate($animation, $duration: var(--animation-spring), $delay: 0s, $iteration: 1, $direction: normal, $fill-mode: forwards) {
  animation-name: $animation;
  animation-duration: $duration;
  animation-delay: $delay;
  animation-iteration-count: $iteration;
  animation-direction: $direction;
  animation-fill-mode: $fill-mode;
}

// Commonly used animation patterns
@mixin fade-in($duration: var(--animation-spring), $delay: 0s) {
  @include animate(fadeIn, $duration, $delay);
}

@mixin fade-out($duration: var(--animation-spring), $delay: 0s) {
  @include animate(fadeOut, $duration, $delay);
}

@mixin slide-in-up($duration: var(--animation-spring), $delay: 0s) {
  @include animate(slideInUp, $duration, $delay);
}

@mixin slide-in-down($duration: var(--animation-spring), $delay: 0s) {
  @include animate(slideInDown, $duration, $delay);
}

@mixin slide-in-left($duration: var(--animation-spring), $delay: 0s) {
  @include animate(slideInLeft, $duration, $delay);
}

@mixin slide-in-right($duration: var(--animation-spring), $delay: 0s) {
  @include animate(slideInRight, $duration, $delay);
}

@mixin bounce-animation($duration: 0.5s, $delay: 0s, $iteration: 1) {
  @include animate(bounce, $duration, $delay, $iteration);
}

@mixin shake-animation($duration: 0.5s, $delay: 0s, $iteration: 1) {
  @include animate(shake, $duration, $delay, $iteration);
}

@mixin pulse-animation($duration: 1s, $delay: 0s, $iteration: infinite) {
  @include animate(pulse, $duration, $delay, $iteration);
}

@mixin rotate-animation($duration: 1s, $delay: 0s, $iteration: infinite) {
  @include animate(rotate, $duration, $delay, $iteration);
}

// Wordle specific animations
@mixin tile-flip($duration: var(--animation-flip), $delay: 0s) {
  @include animate(flip, $duration, $delay);
}

// Staggered animations for multiple elements
@mixin staggered-animation($animation, $items: 5, $base-delay: 0.1s, $duration: var(--animation-spring)) {
  @for $i from 1 through $items {
    &:nth-child(#{$i}) {
      animation-name: $animation;
      animation-duration: $duration;
      animation-delay: $base-delay * ($i - 1);
      animation-fill-mode: forwards;
    }
  }
}
